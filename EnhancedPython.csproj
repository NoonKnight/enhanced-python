<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net47</TargetFramework>
        <Description>My first plugin</Description>
        <Version>1.0.0</Version>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <ImplicitUsings>true</ImplicitUsings>
        <LangVersion>preview</LangVersion>
        <Nullable>enable</Nullable>
        <RestoreAdditionalProjectSources>
            https://api.nuget.org/v3/index.json;
            https://nuget.bepinex.dev/v3/index.json;
        </RestoreAdditionalProjectSources>
        <PackageId>EnhancedPython</PackageId>
    </PropertyGroup>

    <PropertyGroup>
        <TFWR>C:\Program Files (x86)\Steam\steamapps\common\The Farmer Was Replaced</TFWR>
        <Assemblies>$(TFWR)\TheFarmerWasReplaced_Data\Managed</Assemblies>
        <BepInEx>$(TFWR)\BepInEx\core</BepInEx>
        <OutputFolder Condition="'$(OutputFolder)' == ''">BepInEx\plugins</OutputFolder>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all"/>
        <PackageReference Include="BepInEx.Core" Version="5.*"/>
        <PackageReference Include="BepInEx.PluginInfoProps" Version="2.*"/>
        <PackageReference Include="UnityEngine.Modules" Version="2021.3.5" IncludeAssets="compile"/>

        <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.2" PrivateAssets="all" />
    </ItemGroup>

    <!--References to TFWR dependencies-->
    <ItemGroup>
        <Reference Include="$(Assemblies)\mscorlib.dll" />

        <Reference Include="$(Assemblies)\Core.dll" Publicize="true" />
        <Reference Include="$(Assemblies)\Utils.dll" Publicize="true" />

        <Reference Include="$(Assemblies)\Unity.TextMeshPro.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.CoreModule.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.ImageConversionModule.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.IMGUIModule.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.InputLegacyModule.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.JSONSerializeModule.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.UI.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.UIModule.dll" />
        <Reference Include="$(Assemblies)\UnityEngine.TextRenderingModule.dll" />
    </ItemGroup>

    <!--Post build events to copy dll/pdb to mods folder. Works even if game is currently running-->
    <Target Name="MoveDllToMods" AfterTargets="Build" Condition="Exists('$(TargetDir)$(TargetName).dll')">
        <Message Text="Copying $(ProjectName).dll to $(OutputFolder)..." Importance="High"/>

        <Copy SourceFiles="$(TargetDir)$(TargetName).dll"
              DestinationFiles="$(TFWR)\$(OutputFolder)\$(TargetName).dll"/>
    </Target>

    <Target Name="MovePdbToMods" AfterTargets="Build" Condition="Exists('$(TargetDir)$(TargetName).pdb')">
        <Message Text="Copying $(ProjectName).xml to $(OutputFolder)..." Importance="High"/>

        <Copy SourceFiles="$(TargetDir)$(TargetName).pdb"
              DestinationFiles="$(TFWR)\$(OutputFolder)\$(TargetName).pdb"/>
    </Target>
    
    <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all"/>
    </ItemGroup>
</Project>
